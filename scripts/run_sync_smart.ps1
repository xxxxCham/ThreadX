# Script PowerShell - Synchronisation INTELLIGENTE ThreadX
# Test avec BTCUSDC puis lancement complet si souhait√©

$ErrorActionPreference = "Stop"

Write-Host "`nüß† ThreadX - Synchronisation INTELLIGENTE des Donn√©es" -ForegroundColor Cyan
Write-Host "Utilise les donn√©es existantes au lieu de tout re-t√©l√©charger" -ForegroundColor Cyan
Write-Host "="*80 -ForegroundColor Cyan

# V√©rifier Python
if (-not (Test-Path ".venv\Scripts\python.exe")) {
    Write-Host "‚ùå Environnement virtuel non trouv√©" -ForegroundColor Red
    exit 1
}

# D√©finir PYTHONPATH
$env:PYTHONPATH = "$PWD\src"

Write-Host "`nüß™ PHASE 1: Test avec BTCUSDC" -ForegroundColor Yellow
Write-Host "="*80 -ForegroundColor Yellow
Write-Host ""

# Lancer le test avec BTCUSDC
& .venv\Scripts\python.exe scripts\sync_data_smart.py

if ($LASTEXITCODE -ne 0) {
    Write-Host "`n‚ùå Test √©chou√© avec BTCUSDC" -ForegroundColor Red
    exit 1
}

Write-Host "`n‚úÖ Test BTCUSDC r√©ussi!" -ForegroundColor Green
Write-Host ""

# Demander si on continue avec tous les symboles
$response = Read-Host "Voulez-vous synchroniser TOUS les symboles maintenant? (o/n)"

if ($response -eq "o" -or $response -eq "O" -or $response -eq "oui") {
    Write-Host "`nüöÄ PHASE 2: Synchronisation compl√®te" -ForegroundColor Green
    Write-Host "="*80 -ForegroundColor Green
    Write-Host ""

    & .venv\Scripts\python.exe scripts\sync_data_smart.py --full

    if ($LASTEXITCODE -eq 0) {
        Write-Host "`n‚úÖ Synchronisation compl√®te termin√©e!" -ForegroundColor Green
    }
    else {
        Write-Host "`n‚ö†Ô∏è  Synchronisation termin√©e avec des erreurs" -ForegroundColor Yellow
    }
}
else {
    Write-Host "`n‚è≠Ô∏è  Synchronisation compl√®te annul√©e" -ForegroundColor Yellow
    Write-Host "üí° Pour lancer manuellement: python scripts\sync_data_smart.py --full" -ForegroundColor Cyan
}

Write-Host "`nüéâ Termin√©!" -ForegroundColor Green
Write-Host "="*80 -ForegroundColor Cyan
